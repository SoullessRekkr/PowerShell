<#
Checks permissions of target user in all subfolders of the target folder and the user.
Script to check if inheritance is disabled in all subfolders of the target folder.
Trinity Zamrzla (2 March 2020)
#>

Clear
$targetname = Read-Host -Prompt "Input User SamAccountName i.e.(Oak-AcademicCenter-admin)"
Write-Host " "
$folder = Read-Host -Prompt "Input target Folder i.e.(L:\Depts\AcademicCenter)"
Write-Host " "
Write-Host "   What Check To Run"
Write-Host " "
Write-Host "IS - Inheritance Status"
Write-Host "          or"
Write-Host "PC - Permission Check"
Write-Host " "
$checktype = Read-Host -Prompt "IS or PC"
Write-Host " "

$checkcon = $false
do {
    Switch ($checktype) {    
        default {
            $checktype = Read-Host -Prompt "Please enter IS or PC"
        }
        IS {
            $tool = "with Inheritance Disabled"
            Write-Host "Starting the Check"
            $pathmany = Get-ChildItem $folder -Recurse -Directory |
                where { ((Get-ACL -Path $_.Fullname).GetAccessRules($true,$true,[System.Security.Principal.NTAccount]).IsInherited -notcontains $true) -eq $true}
            $checkcon = $true
        }
        PC {
            $tool = "Found"
            Write-Host "Starting the Check"
            $pathmany = Get-ChildItem $folder -Recurse -Directory
            $checkcon = $true
        }
    }
} until ($checkcon -eq $true)
$NoPermReport = @()
$HasPermReport = @()

$total = $pathmany.count
$bad = 0
$good = 0
$fullcontrol = 0
Write-Host " "
Write-Host "List of users permission for each folder found in target folder with inheritance disabled"
Write-Host " "
foreach ($item in $pathmany) {
    $path = $item.FullName
    $permission = (Get-Acl $path).Access |
        where {
            $_.IdentityReference -match $targetname
            } |
            Select IdentityReference,FileSystemRights
        If ($permission) {
            $permission |
                ForEach {
                    Write-Host "[$($_.FileSystemRights)] in $path"
                    Start-Sleep -Milliseconds 10
                    $itemHasPerm = New-Object –TypeName PSObject
                    $itemHasPerm | Add-Member –MemberType NoteProperty –Name "Permission" -Value $permission.FileSystemRights
                    $itemHasPerm | Add-Member –MemberType NoteProperty –Name "Folder Path" -Value $path
                    $HasPermReport += $itemHasPerm
                }
                    if ($permission.FileSystemRights -like "FullControl") {
                    $fullcontrol += 1
                    }
                    else {
                    continue
                    }
        }
        Else {
            Write-Host "[NO PERMISSIONS] ", "in $path" -ForegroundColor Red
            Start-Sleep -Milliseconds 50
                    Start-Sleep -Milliseconds 10
                    $itemNoPerm = New-Object –TypeName PSObject
                    $itemNoPerm | Add-Member –MemberType NoteProperty –Name "Permission" -Value "NO PERMISSIONS"
                    $itemNoPerm | Add-Member –MemberType NoteProperty –Name "Folder Path" -Value $path
                    $NoPermReport += $itemNoPerm
            $bad += 1
        }
}

$good = $total - $bad - $fullcontrol
$timestamp = (Get-Date).tostring("dd-MMM-yyyy")
$profile = "$($env:USERPROFILE)\Documents\"

if ($checktype -like "IS") {
Write-Host " "
Write-Host "List of folders with full path names with INHERITANCE DISABLED"
Write-Host "was exported to your Document Folder as 'FolderList.txt'"
$pathmany.FullName | Format-Table -Auto | Out-File "$profile\$targetname - InheritanceDisabled - $timestamp.txt"
Write-Host " "
Write-Host "Total Folders $tool"
Write-Host $pathmany.count -ForegroundColor Yellow
break
}
$NoPermReport | Format-Table -Auto | Out-File "$profile\$targetname - NoPermissions - $timestamp.txt"
$HasPermReport | where {$_.Permission -notlike "FullControl"}| Format-Table -Auto | Out-File "$profile\$targetname - OtherPermissions - $timestamp.txt"
$HasPermReport | where {$_.Permission -like "FullControl"}| Format-Table -Auto | Out-File "$profile\$targetname - FullContorl - $timestamp.txt"

Write-Host " "
Write-Host "File name is NonInheritanceFolders.txt"
Write-Host " "
Write-Host "Total Folders $tool"
Write-Host $pathmany.count -ForegroundColor Yellow
Write-Host "User Has FullControl"
Write-Host $fullcontrol -ForegroundColor Green
Write-Host "User Has Permissions"
Write-Host $good -ForegroundColor Cyan
Write-Host "User Permissions Do Not Exist"
Write-Host $bad -ForegroundColor Red
