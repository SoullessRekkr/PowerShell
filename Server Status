Clear
$ADLocation = "OU=XXX,OU=XXXXXX,DC=XXXXXX,DC=XXX,DC=XXXX"
$local = (Get-WmiObject Win32_Computersystem).name

Write-Host "     To retrieve all server enter a single [*]"
Write-Host "                        or"
Write-Host "  Enter the Name/s To Filter by Wildcards [*] excepted"
Write-Host " Follow the pattern below to select servers individually"

$PCFilter = Read-Host -Prompt "Name -like 'vine' -or Name -like 'its-dracosvm2'"
$searchdate = Read-Host "Enter date in the format of mm/dd/yyy i.e.(10/1/2014)"
$cred = Get-Credential
$PCList = Get-ADComputer -Filter "$PCFilter" -SearchBase $ADLocation -SearchScope 2 -Properties *

$newlist = @()

foreach($PC in $PCList) {
    Write-Host "Pulling Server Status for $($PC.name)" -ForegroundColor Cyan
    Start-Sleep -Milliseconds 50

    $PCInfo = Get-CimInstance Win32_OperatingSystem -computer $PC.Name
    $UpTime = $PCInfo.LocalDateTime.DayOfYear - $PCInfo.LastBootUpTime.DayOfYear

    if ($PC.OperatingSystem -like "*Server*") {
        $itemobject = New-Object –TypeName PSObject
            $itemobject | Add-Member –MemberType NoteProperty –Name "Server Name" -Value $PC.CN
            $itemobject | Add-Member –MemberType NoteProperty –Name "Operating System" -Value $PC.OperatingSystem
            $itemobject | Add-Member –MemberType NoteProperty –Name "Version" -Value $PC.OperatingSystemVersion
            $itemobject | Add-Member –MemberType NoteProperty –Name "Up Time" -Value $UpTime

            $newlist +=$itemobject
    }
}

$fixlist = @()

foreach($name in $newlist) {
    $testname = $($name.'Server Name')
    Write-Host "Pulling Hotfixes for $testname" -ForegroundColor Green
    Start-Sleep -Milliseconds 50
    if ($testname -notmatch $local) {
        $HotFix = Get-HotFix -ComputerName $testname -Credential $cred |
            Where {
                $_.InstalledOn -gt $searchdate
            } |
                Sort InstalledOn
    }
    else {
        $HotFix = Get-HotFix |
            Where {
                $_.InstalledOn -gt $searchdate
            } |
                Sort InstalledOn
}
    $timestamp = (Get-Date).tostring("hh-mm-ss - dd-MMM-yy")
    $HotFix | Out-File "C:\Users\$env:UserName\Documents\HotFix List - $testname - $timestamp.txt"
    Write-Host "Created a list of Hotfixes for $testname in your Documents Folders" -ForegroundColor Green
    
}

if ($newlist.count -match '0') {
    Write-Host "Nothing to see here"
    break
}
else {
$newlist | Sort-Object -Property "Server Name" | Format-Table -Wrap
}

Write-Host "Total Number Systems ::"$TotalADPC.count
Write-Host "Total Filtered Systems ::"$newlist.count

$timestamp = (Get-Date).tostring("hh-mm-ss - dd-MMM-yy")
$newlist | Sort-Object -Property "Server Name" | Format-Table -Wrap | Out-File "C:\Users\$env:UserName\Documents\Server Status - $timestamp.txt"
Write-Host "Created a list of Servers and there status in your Documents Folders" -ForegroundColor Green
